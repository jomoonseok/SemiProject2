<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.semi.animal.mapper.admin.AdminMapper">

	<!-- 유저 -->
	
	<!-- 유저 카운트 -->
	<select id="selectUserListCount" resultType="int">
		SELECT COUNT(*)
		  FROM ANI_USER
	</select>
	
	<!-- 유저 목록 -->
	<select id="selectUserListByMap" parameterType="Map" resultType="UserDTO">
		SELECT A.ROW_NUM, A.USER_NO, A.ID, A.PW, A.NAME, A.GENDER, A.EMAIL, A.MOBILE, A.BIRTH_YEAR, A.BIRTH_DAY, A.POSTCODE, A.ROAD_ADDRESS, A.JIBUN_ADDRESS, A.DETAIL_ADDRESS, A.EXTRA_ADDRESS, A.AGREE_CODE, A.SNS_TYPE, A.JOIN_DATE, A.PW_MODIFY_DATE, A.INFO_MODIFY_DATE, A.SESSION_ID, A.SESSION_LIMIT_DATE, A.POINT
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY USER_NO DESC) AS ROW_NUM, USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE, POINT
		          FROM ANI_USER) A
		 WHERE A.ROW_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 유저 삭제(휴면, 탈퇴) -->
	<delete id="deleteUser" parameterType="Map">
		DELETE 
		  FROM ANI_USER
		  <where>
		    <foreach item="item" collection="idList" open="ID in (" separator="," close=")">
		    	#{item}
		    </foreach>
		  </where>
	</delete>
	
	<!-- 유저 삭제2 : RETIRE_USERS 테이블에 추가 -->
	<insert id="insertRetireUser" parameterType="Map">
		INSERT INTO ANI_USER_RETIRE (RETIRE_NO, ID, JOIN_DATE, RETIRE_DATE)
		SELECT ANI_USER_RETIRE_SEQ.NEXTVAL, A.* 
		  FROM(
			<foreach collection="retireUserList" item="item" separator="UNION ALL ">
			SELECT #{item.id} AS ID, #{item.joinDate} AS JOIN_DATE, SYSDATE
			  FROM DUAL
			</foreach>) A 
	</insert>
	
	<!-- 휴면 처리할 유저 찾기 -->
	<select id="selectUserListById" parameterType="Map" resultType="UserDTO">
		SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE, POINT
		  FROM ANI_USER
		 	WHERE ID in
		  <foreach item="item" collection="idList" open="(" separator="," close=")">
		  		#{item}
		  </foreach>
	</select>
	
	<!-- 휴면 테이블에 휴면 처리 한 유저 저장 -->
	<insert id="insertSleepUsers" parameterType="Map">
		INSERT INTO ANI_USER_SLEEP (USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, LAST_LOGIN_DATE, SLEEP_DATE, POINT)
			<foreach collection="sleepUsers" item="item" separator="UNION ALL ">
			SELECT #{item.userNo} AS USER_NO, #{item.id} AS ID, #{item.pw} AS PW, #{item.name} AS NAME, #{item.gender} AS GENDER, #{item.email} AS EMAIL, #{item.mobile} AS MOBILE, #{item.birthYear} AS BIRTH_YEAR, #{item.birthDay} AS BIRTH_DAY, #{item.postcode} AS POSTCODE, #{item.roadAddress} AS ROAD_ADDRESS, #{item.jibunAddress} AS JIBUN_ADDRESS, #{item.detailAddress} AS DETAIL_ADDRESS, #{item.extraAddress} AS EXTRA_ADDRESS, #{item.agreeCode} AS AGREE_CODE, #{item.snsType} AS SNS_TYPE, #{item.joinDate} AS JOIN_DATE, #{item.lastLoginDate} AS LAST_LOGIN_DATE, SYSDATE, #{item.point} AS POINT
			  FROM DUAL
			</foreach>
	</insert>
	
	

	
	
	
	
	
	<!-- 자유게시판 -->
	
	<!-- 1. 게시글 카운트 -->
	<select id="selectFreeListCount" resultType="int">
		SELECT COUNT(*)
		  FROM ANI_BRD_FREE
	</select>

	<!-- 2. 게시글 조회 -->
	<select id="selectFreeListByMap" parameterType="Map" resultType="FreeBoardDTO">
		SELECT A.ROW_NUM, A.FREE_NO, A.ID, A.FREE_TITLE, A.FREE_CONTENT, A.FREE_CREATE_DATE, A.FREE_MODIFY_DATE, A.FREE_IP, A.FREE_HIT
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY FREE_NO DESC) AS ROW_NUM, FREE_NO, ID, FREE_TITLE, FREE_CONTENT, FREE_CREATE_DATE, FREE_MODIFY_DATE, FREE_IP, FREE_HIT
		  		  FROM ANI_BRD_FREE) A
		 WHERE A.ROW_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 3. 조회수 -->
	<update id="updateHit" parameterType="int">
		UPDATE ANI_BRD_FREE
		   SET HIT = HIT + 1
		 WHERE FREE_NO = #{freeNo}
	</update>
	
	<!-- 4. 게시글 추가 -->
	<insert id="insertFreeBoard" parameterType="FreeBoardDTO"  useGeneratedKeys="true" keyProperty="freeNo">

		<selectKey keyProperty="freeNo" resultType="int" order="BEFORE">			   
			SELECT ANI_BRD_FREE_SEQ.NEXTVAL FROM DUAL
		</selectKey>

      INSERT INTO ANI_BRD_FREE
         (FREE_NO, ID, FREE_TITLE, FREE_CONTENT, FREE_CREATE_DATE, FREE_MODIFY_DATE, FREE_IP, FREE_HIT)
      VALUES
         (${freeNo}, 'HYO', #{freeTitle}, #{freeContent}, SYSDATE, SYSDATE, #{freeIp}, 0)
   </insert>

	
	<!-- 5. 특정 게시글 선택 -->
	<select id="selectFreeBoardByNo" parameterType="int" resultType="FreeBoardDTO">
		SELECT FREE_NO, ID, FREE_TITLE, FREE_CONTENT, FREE_CREATE_DATE, FREE_MODIFY_DATE, FREE_IP, FREE_HIT
		  FROM ANI_BRD_FREE
		 WHERE FREE_NO = #{freeNo}
	
	</select>
	
	<!-- . 게시글 삭제 -->
	<delete id="deleteFreeBoard" parameterType="int">
		DELETE
		  FROM ANI_BOARD_FREE
		 WHERE FREE_NO = #{freeNo}
	
	</delete>

</mapper>