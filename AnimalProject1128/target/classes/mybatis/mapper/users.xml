<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.semi.animal.mapper.user.UserMapper">

	<!-- UserMapper에서 int로 선언되지 않는 값은 resultType으로 선언 -->
	<!-- UserMapper의 매개변수를 prameterType으로 선언 -->

	<!-- 아이디 중복체크1: 회원가입시 이메일 중복체크, 로그인 유지를 이용한 로그인, 마이페이지 가기 전 비번 확인 -->
	<select id="selectUserByMap" parameterType="Map" resultType="UserDTO">
		SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE, POINT
		  FROM ANI_USER
		 <where>
			 <if test="id != null">  <!-- 아이디가 있을 때 -->
			 	ID = #{id}  <!-- 입력받은 id값이 ID에 있으면 SELECT FROM절을 수행하라. -->
			 </if>
			 <if test="pw != null">
			 	AND PW = #{pw}  <!-- 위에 조건 ID가 있기 때문에 AND가 붙음. -->
			 </if>
			 <if test="email != null">
			 	AND EMAIL = #{email}
			 </if>
			 <if test="sessionId != null">
			 	AND SESSION_ID = #{sessionId}  
			 	AND SESSION_LIMIT_DATE > SYSDATE  <!-- 세션만료일 > 현재일자 즉, 현재 세션만료기간이 남아있다. -->
			 </if>
		 </where>
	</select>
	
	<!-- 아이디 중복체크2 -->
	<select id="selectRetireUserById" parameterType="String" resultType="RetireUserDTO">
		SELECT ID
		  FROM ANI_USER_RETIRE
		 WHERE ID = #{id}
	</select>
	
	<!-- 일반회원가입 -->
	<!-- 칼럼이 NOT NULL이면 #{}, 아니면 NULL --> <!-- 여기 -->
	<insert id="insertUser" parameterType="UserDTO">
		INSERT INTO ANI_USER
			(USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE, POINT)
		VALUES
			(ANI_USER_SEQ.NEXTVAL, #{id}, #{pw}, #{name}, #{gender}, #{email}, #{mobile}, #{birthYear}, #{birthDay}, #{postcode}, #{roadAddress}, #{jibunAddress}, #{detailAddress}, #{extraAddress}, #{agreeCode}, NULL, SYSDATE, SYSDATE, SYSDATE, NULL, NULL, 0)
	</insert>
	
	<!-- 네이버아이디로그인 회원가입 -->
	<insert id="insertNaverUser" parameterType="UserDTO">
		INSERT INTO ANI_USER
			(USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, PW_MODIFY_DATE, INFO_MODIFY_DATE, SESSION_ID, SESSION_LIMIT_DATE, POINT)
		VALUES
			(USERS_SEQ.NEXTVAL, #{id}, #{pw}, #{name}, #{gender}, #{email}, #{mobile}, #{birthYear}, #{birthDay}, NULL, NULL, NULL, NULL, NULL, #{agreeCode}, #{snsType}, SYSDATE, SYSDATE, SYSDATE, SYSDATE, NULL, 0)
	</insert>
	
	<!-- 로그인 기록(ACCESS_LOG) 남기기 -->
	<update id="updateAccessLog" parameterType="String">
		UPDATE ANI_USER_ACCESS
		   SET LAST_LOGIN_DATE = SYSDATE
		 WHERE ID = #{id}
	</update>
	<insert id="insertAccessLog" parameterType="String">
		INSERT INTO ANI_USER_ACCESS
			(ID, LAST_LOGIN_DATE)
		VALUES
			(#{id}, SYSDATE)
	</insert>
	
	<!-- 회원탈퇴1 : USERS 테이블에서 제거 -->
	<delete id="deleteUser" parameterType="int">
		DELETE
		  FROM ANI_USER
		 WHERE USER_NO = #{userNo}
	</delete>
	
	<!-- 회원탈퇴2 : RETIRE_USERS 테이블에 추가 -->
	<insert id="insertRetireUser" parameterType="RetireUserDTO">
		INSERT INTO ANI_USER_RETIRE
			(RETIRE_NO, ID, JOIN_DATE, RETIRE_DATE)
		VALUES
			(#{retireNo}, #{id}, #{joinDate}, SYSDATE)
	</insert>
	
	<!-- 로그인 유지를 위한 SESSION_ID/SESSION_LIMIT_DATE 업데이트 -->
	<update id="updateSessionInfo" parameterType="UserDTO">
		UPDATE ANI_USER
		   SET SESSION_ID = #{sessionId}
		     , SESSION_LIMIT_DATE = #{sessionLimitDate}
		 WHERE ID = #{id}
	</update>
	
	<!-- 마이페이지 : 비밀번호 수정 -->
	<update id="updateUserData" parameterType="UserDTO">
		UPDATE ANI_USER
		   SET PW = #{pw}
		     , PW_MODIFY_DATE = SYSDATE
		     , MOBILE = #{mobile}
		     , EMAIL = #{email}
		     , POSTCODE = #{postcode}
		     , ROAD_ADDRESS = #{roadAddress}
		     , JIBUN_ADDRESS = #{jibunAddress}
		     , DETAIL_ADDRESS = #{detailAddress}
		     , EXTRA_ADDRESS = #{extraAddress}
		 WHERE USER_NO = ${userNo}      
	</update>
	
	<!-- 휴면처리1 : 1년 이상 로그인 기록이 없으면 휴면테이블에 저장 -->
	<insert id="insertSleepUser">
		INSERT INTO ANI_USER_SLEEP(USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, LAST_LOGIN_DATE, SLEEP_DATE, POINT)      
			(SELECT U.USER_NO, U.ID, U.PW, U.NAME, U.GENDER, U.EMAIL, U.MOBILE, U.BIRTH_YEAR, U.BIRTH_DAY, U.POSTCODE, U.ROAD_ADDRESS, U.JIBUN_ADDRESS, U.DETAIL_ADDRESS, U.EXTRA_ADDRESS, U.AGREE_CODE, U.SNS_TYPE, U.JOIN_DATE, A.LAST_LOGIN_DATE, SYSDATE, U.POINT
		  	   FROM ANI_USER U LEFT OUTER JOIN ANI_USER_ACCESS A
		         ON U.ID = A.ID
		      WHERE MONTHS_BETWEEN(SYSDATE, A.LAST_LOGIN_DATE) >= 12  
		         OR (MONTHS_BETWEEN(SYSDATE, U.JOIN_DATE) >=12 AND A.LAST_LOGIN_DATE IS NULL))
	</insert>
	
	<!-- 휴면처리2 : 1년 이상 로그인 기록이 없으면 회원테이블에서 삭제 -->
	<delete id="deleteUserForSleep">
		DELETE 
 		  FROM ANI_USER
		 WHERE ID in (SELECT U.ID
					    FROM ANI_USER U LEFT OUTER JOIN ANI_USER_ACCESS A
					      ON U.ID = A.ID
					   WHERE MONTHS_BETWEEN(SYSDATE, A.LAST_LOGIN_DATE) >= 12 
					      OR (MONTHS_BETWEEN(SYSDATE, U.JOIN_DATE) >=12 AND A.LAST_LOGIN_DATE IS NULL))
	</delete>
	 
	 
	 <!-- 로그인 이전에 휴면회원인지 확인 -->
	 <select id="selectSleepUserById" parameterType="String" resultType="SleepUserDTO">
	 	SELECT ID, JOIN_DATE, LAST_LOGIN_DATE, SLEEP_DATE
	 	  FROM ANI_USER_SLEEP
	 	 WHERE ID = #{id}
	 </select>
	 
	 <!-- 휴면복원1 : 복원할 회원을 USERS 테이블에 삽입 -->
     <insert id="insertRestoreUser" parameterType="String">
        INSERT INTO ANI_USER(USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, POINT)
           (SELECT USER_NO, ID, PW, NAME, GENDER, EMAIL, MOBILE, BIRTH_YEAR, BIRTH_DAY, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREE_CODE, SNS_TYPE, JOIN_DATE, POINT
              FROM ANI_USER_SLEEP
             WHERE ID = #{id})
     </insert>
	 
	 <!-- 휴면복원2 : 복원할 회원을 SLEEP_USERS 테이블에서 삭제 -->
	 <delete id="deleteSleepUser" parameterType="String">
		 DELETE
  		   FROM ANI_USER_SLEEP
 		  WHERE ID = #{id}
	 </delete>
	 
	 <!-- 아이디찾기 : 휴면계정 -->
	 <select id="findSleep" parameterType="Map" resultType="SleepUserDTO">
		SELECT *
		  FROM ANI_USER_SLEEP
		 WHERE EMAIL = #{email}
	</select>
	 
	
	 
	
</mapper>